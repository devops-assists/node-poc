name: Deploy to Production

on:
  workflow_dispatch:
    
permissions:
  id-token: write  
  contents: read   

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    env:
      GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get latest release tag
        id: get_latest_release
        run: |
         latest_tag=$(curl -s -H "Authorization: token ${{ env.GITHUB_TOKEN }}" https://api.github.com/repos/devops-assists/node-poc/releases/latest | jq -r .tag_name)
         echo "::set-output name=tag::$latest_tag"
            
      - name: Print release tag value
        run: echo "The latest release tag i ${{ steps.get_latest_release.outputs.latest_tag }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:   
          role-to-assume: ${{secrets.AWS_IAM_ROLE}}
          role-session-name: devops
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download task definition for swivu-server
        run: |
           aws ecs describe-task-definition --task-definition  ${{ vars.SERVER_ECS_TASK_DEF }} --query taskDefinition > server_task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition for  swivu-server
        id: swivu-server-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: server_task-definition.json
          container-name: ${{ vars.SERVER_CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.SERVER_ECR_REPOSITORY }}:${{ steps.get_latest_release.outputs.latest_release }}

      - name: Deploy Amazon ECS task definition for swivu-server-task-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.swivu-server-task-def.outputs.task-definition }}
          service: ${{ vars.SERVER_ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true


      - name: Download task definition for swivu-celery
        run: |
           aws ecs describe-task-definition --task-definition  ${{ vars.CELERY_ECS_TASK_DEF }} --query taskDefinition > celery_task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition for  swivu-celery
        id: swivu-celery-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: celery_task-definition.json
          container-name: ${{ vars.CELERY_CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.CELERY_ECR_REPOSITORY }}:${{ steps.get_latest_release.outputs.latest_release }}



      - name: Deploy Amazon ECS task definition for swivu-celery-task-def
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.swivu-celery-task-def.outputs.task-definition }}
          service: ${{ vars.CELERY_ECS_SERVICE }}
          cluster: ${{ vars.ECS_CLUSTER }}
          wait-for-service-stability: true
